{"ast":null,"code":"/**\n * Class representing users in PingOne Directory.\n *\n * This demo-specific class is developed and maintained by Ping Identity Technical Enablement.\n * Implements methods to integrate with PingOne via the management APIs.\n *\n * @author Michael Sanchez\n * @see https://apidocs.pingidentity.com/pingone/platform/v1/api/#management-apis\n */\n\nclass PingOneUsers {\n  /**\n  Class constructor\n  What constructor does [optional if nothing done special for instantiation].\n   @param {string} proxyApiPath Management API host.\n  @param {string} envId PingOne tenant environment ID.\n  */\n  constructor(envVars) {\n    this.envId = envVars.REACT_APP_ENVID;\n    this.authPath = envVars.REACT_APP_AUTHPATH;\n    this.p1Host = envVars.REACT_APP_P1HOST;\n    this.appProxyHost = 'https://sko23-bxr-tf-proxy.ping-devops.com';\n  }\n\n  /**\n  Read User:\n  Read one user's data.\n   @see https://apidocs.pingidentity.com/pingone/platform/v1/api/#get-read-one-user\n  @param {string} userId User ID GUID that you would like to read.\n  @param {string} lowPrivToken Lower privileged token for Management API.\n  @param {string} currentSessionId Current ST Session ID\n  @return {object} JSON formatted response object of user data.\n  */\n  async readUser(_ref) {\n    let {\n      userId,\n      token\n    } = _ref;\n    console.info('Integration.PingOneUsers.js', \"Reading user's data.\");\n    console.log('params', {\n      userId,\n      token\n    });\n    let myHeaders = new Headers();\n    myHeaders.append('Authorization', 'Bearer ' + token);\n    let requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'manual'\n    };\n    // {{apiPath}}/environments/{{envID}}/users/{{userID}}?expand=population\n    const url = this.appProxyHost + '/user/' + this.envId + '/users/' + userId + '?expand=population';\n    console.log('url', url);\n    const response = await fetch(url, requestOptions);\n    const jsonResponse = await response.json();\n    console.log('jsonResponse', jsonResponse);\n    return jsonResponse;\n  }\n\n  /**\n   * OIDC User Info endpoint\n   *\n   * {@link https://apidocs.pingidentity.com/pingone/platform/v1/api/#post-userinfo}\n   */\n  async userInfo(access_token) {\n    console.info('Integration.PingOneUsers', 'Calling the User Info endpoint.');\n    let myHeaders = new Headers();\n    myHeaders.append('Authorization', 'Bearer ' + access_token);\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      redirect: 'manual'\n    };\n    const url = this.p1Host + '/' + this.envId + '/as/userinfo';\n    const rawResponse = await fetch(url, requestOptions);\n    return rawResponse;\n  }\n}\nexport default PingOneUsers;","map":{"version":3,"names":["PingOneUsers","constructor","envVars","envId","REACT_APP_ENVID","authPath","REACT_APP_AUTHPATH","p1Host","REACT_APP_P1HOST","appProxyHost","readUser","userId","token","console","info","log","myHeaders","Headers","append","requestOptions","method","headers","redirect","url","response","fetch","jsonResponse","json","userInfo","access_token","rawResponse"],"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/vscode-workspaces/BXRetail/BXRetail-Apps/bxretail/src/components/Integration/PingOneUsers.js"],"sourcesContent":["/**\n * Class representing users in PingOne Directory.\n *\n * This demo-specific class is developed and maintained by Ping Identity Technical Enablement.\n * Implements methods to integrate with PingOne via the management APIs.\n *\n * @author Michael Sanchez\n * @see https://apidocs.pingidentity.com/pingone/platform/v1/api/#management-apis\n */\n\nclass PingOneUsers {\n    /**\n    Class constructor\n    What constructor does [optional if nothing done special for instantiation].\n\n    @param {string} proxyApiPath Management API host.\n    @param {string} envId PingOne tenant environment ID.\n    */\n    constructor(envVars) {\n        this.envId = envVars.REACT_APP_ENVID;\n        this.authPath = envVars.REACT_APP_AUTHPATH;\n        this.p1Host = envVars.REACT_APP_P1HOST;\n        this.appProxyHost = 'https://sko23-bxr-tf-proxy.ping-devops.com';\n    }\n\n    /**\n    Read User:\n    Read one user's data.\n\n    @see https://apidocs.pingidentity.com/pingone/platform/v1/api/#get-read-one-user\n    @param {string} userId User ID GUID that you would like to read.\n    @param {string} lowPrivToken Lower privileged token for Management API.\n    @param {string} currentSessionId Current ST Session ID\n    @return {object} JSON formatted response object of user data.\n    */\n    async readUser({ userId, token }) {\n        console.info('Integration.PingOneUsers.js', \"Reading user's data.\");\n\n        console.log('params', {userId, token});\n        \n        let myHeaders = new Headers();\n        myHeaders.append('Authorization', 'Bearer ' + token);\n        \n        let requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'manual',\n        };\n        // {{apiPath}}/environments/{{envID}}/users/{{userID}}?expand=population\n        const url = this.appProxyHost + '/user/' + this.envId + '/users/' + userId + '?expand=population';\n        console.log('url', url);\n        const response = await fetch(url, requestOptions);\n        const jsonResponse = await response.json();\n        \n        console.log('jsonResponse', jsonResponse);\n\n        return jsonResponse;\n    }\n\n    /**\n     * OIDC User Info endpoint\n     *\n     * {@link https://apidocs.pingidentity.com/pingone/platform/v1/api/#post-userinfo}\n     */\n    async userInfo(access_token) {\n        console.info('Integration.PingOneUsers', 'Calling the User Info endpoint.');\n\n        let myHeaders = new Headers();\n        myHeaders.append('Authorization', 'Bearer ' + access_token);\n\n        const requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            redirect: 'manual',\n        };\n\n        const url = this.p1Host + '/' + this.envId + '/as/userinfo';\n\n        const rawResponse = await fetch(url, requestOptions);\n        return rawResponse;\n    }\n}\nexport default PingOneUsers;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,CAAC;EACf;AACJ;AACA;AACA;AACA;AACA;EAEIC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,KAAK,GAAGD,OAAO,CAACE,eAAe;IACpC,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,kBAAkB;IAC1C,IAAI,CAACC,MAAM,GAAGL,OAAO,CAACM,gBAAgB;IACtC,IAAI,CAACC,YAAY,GAAG,4CAA4C;EACpE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI,MAAMC,QAAQ,OAAoB;IAAA,IAAnB;MAAEC,MAAM;MAAEC;IAAM,CAAC;IAC5BC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAE,sBAAsB,CAAC;IAEnED,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAE;MAACJ,MAAM;MAAEC;IAAK,CAAC,CAAC;IAEtC,IAAII,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGN,KAAK,CAAC;IAEpD,IAAIO,cAAc,GAAG;MACjBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEL,SAAS;MAClBM,QAAQ,EAAE;IACd,CAAC;IACD;IACA,MAAMC,GAAG,GAAG,IAAI,CAACd,YAAY,GAAG,QAAQ,GAAG,IAAI,CAACN,KAAK,GAAG,SAAS,GAAGQ,MAAM,GAAG,oBAAoB;IACjGE,OAAO,CAACE,GAAG,CAAC,KAAK,EAAEQ,GAAG,CAAC;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAEJ,cAAc,CAAC;IACjD,MAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAE1Cd,OAAO,CAACE,GAAG,CAAC,cAAc,EAAEW,YAAY,CAAC;IAEzC,OAAOA,YAAY;EACvB;;EAEA;AACJ;AACA;AACA;AACA;EACI,MAAME,QAAQ,CAACC,YAAY,EAAE;IACzBhB,OAAO,CAACC,IAAI,CAAC,0BAA0B,EAAE,iCAAiC,CAAC;IAE3E,IAAIE,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC7BD,SAAS,CAACE,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGW,YAAY,CAAC;IAE3D,MAAMV,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEL,SAAS;MAClBM,QAAQ,EAAE;IACd,CAAC;IAED,MAAMC,GAAG,GAAG,IAAI,CAAChB,MAAM,GAAG,GAAG,GAAG,IAAI,CAACJ,KAAK,GAAG,cAAc;IAE3D,MAAM2B,WAAW,GAAG,MAAML,KAAK,CAACF,GAAG,EAAEJ,cAAc,CAAC;IACpD,OAAOW,WAAW;EACtB;AACJ;AACA,eAAe9B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}