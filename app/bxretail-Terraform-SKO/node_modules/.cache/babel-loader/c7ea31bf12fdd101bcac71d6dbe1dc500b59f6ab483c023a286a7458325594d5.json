{"ast":null,"code":"/** \n * A set of recursive JSON search algorithms.\n * Originally written by shakhal in classic JS.\n * Refactored to ES6 by dr-mohamed-benkhalifa.\n * getObjects() written by iwek.\n * \n * @author dr-mohamed-benkhalifa\n * {@link https://gist.github.com/shakhal/3cf5402fc61484d58c8d}\n * {@link https://gist.github.com/iwek/3924925#file-find-in-json-js}\n*/\n\nclass JSONSearch {\n  /**\n  Find Values by Key:\n  Find values recursively by key in a JSON object.\n  \n  @param {object} obj The JSON object to be searched recursively.\n  @param {string} key The key for which to search.\n  @return {array} An array of search results.\n  */\n  findValues(obj, key) {\n    let list = [];\n    if (!obj) return list;\n    if (obj instanceof Array) {\n      for (var i in obj) {\n        list = list.concat(this.findValues(obj[i], key));\n      }\n      return list;\n    }\n    if (obj[key]) list.push(obj[key]);\n    if (typeof obj == \"object\" && obj !== null) {\n      let children = Object.keys(obj);\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          list = list.concat(this.findValues(obj[children[i]], key));\n        }\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Find Values by Key or Value:\n   * Find values recurseivly by key or value in a JSON object.\n   * \n   * @param {object} obj The JSON object to be searched recursively.\n   * @param {string} key The key for which to search.\n   * @param {string} val The value for which to search.\n   * @return {array} An array of search results.\n  */\n  getObjects(_ref) {\n    let {\n      obj,\n      key,\n      val\n    } = _ref;\n    var objects = [];\n    for (var i in obj) {\n      if (!obj.hasOwnProperty(i)) continue;\n      if (typeof obj[i] == 'object') {\n        objects = objects.concat(this.getObjects(obj[i], key, val));\n      } else\n        //if key matches and value matches or if key matches and value is not passed (eliminating the case where key matches but passed value does not)\n        // eslint-disable-next-line no-mixed-operators\n        if (i === key && obj[i] === val || i === key && val === '') {\n          //\n          objects.push(obj);\n        } else if (obj[i] === val && key === '') {\n          //only add if the object is not already in the array\n          if (objects.lastIndexOf(obj) === -1) {\n            objects.push(obj);\n          }\n        }\n    }\n    return objects;\n  }\n}\n;\nexport default JSONSearch;","map":{"version":3,"names":["JSONSearch","findValues","obj","key","list","Array","i","concat","push","children","Object","keys","length","getObjects","val","objects","hasOwnProperty","lastIndexOf"],"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/vscode-workspaces/BXRetail/BXRetail-Apps/bxretail/src/components/Utils/JSONSearch.js"],"sourcesContent":["/** \n * A set of recursive JSON search algorithms.\n * Originally written by shakhal in classic JS.\n * Refactored to ES6 by dr-mohamed-benkhalifa.\n * getObjects() written by iwek.\n * \n * @author dr-mohamed-benkhalifa\n * {@link https://gist.github.com/shakhal/3cf5402fc61484d58c8d}\n * {@link https://gist.github.com/iwek/3924925#file-find-in-json-js}\n*/\n\nclass JSONSearch {\n\n    /**\n    Find Values by Key:\n    Find values recursively by key in a JSON object.\n    \n    @param {object} obj The JSON object to be searched recursively.\n    @param {string} key The key for which to search.\n    @return {array} An array of search results.\n    */\n    findValues(obj, key) {\n\n        let list = [];\n        if (!obj) return list;\n        if (obj instanceof Array) {\n            for (var i in obj) {\n                list = list.concat(this.findValues(obj[i], key));\n            }\n            return list;\n        }\n        if (obj[key]) list.push(obj[key]);\n\n        if ((typeof obj == \"object\") && (obj !== null)) {\n            let children = Object.keys(obj);\n            if (children.length > 0) {\n                for (let i = 0; i < children.length; i++) {\n                    list = list.concat(this.findValues(obj[children[i]], key));\n                }\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Find Values by Key or Value:\n     * Find values recurseivly by key or value in a JSON object.\n     * \n     * @param {object} obj The JSON object to be searched recursively.\n     * @param {string} key The key for which to search.\n     * @param {string} val The value for which to search.\n     * @return {array} An array of search results.\n    */\n    getObjects({obj, key, val}) {\n    var objects = [];\n    for (var i in obj) {\n        if (!obj.hasOwnProperty(i)) continue;\n        if (typeof obj[i] == 'object') {\n            objects = objects.concat(this.getObjects(obj[i], key, val));\n        } else\n            //if key matches and value matches or if key matches and value is not passed (eliminating the case where key matches but passed value does not)\n            // eslint-disable-next-line no-mixed-operators\n            if (i === key && obj[i] === val || i === key && val === '') { //\n                objects.push(obj);\n            } else if (obj[i] === val && key === '') {\n                //only add if the object is not already in the array\n                if (objects.lastIndexOf(obj) === -1) {\n                    objects.push(obj);\n                }\n            }\n    }\n    return objects;\n}\n};\n\nexport default JSONSearch;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,UAAU,CAAC;EAEb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,GAAG,EAAEC,GAAG,EAAE;IAEjB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAI,CAACF,GAAG,EAAE,OAAOE,IAAI;IACrB,IAAIF,GAAG,YAAYG,KAAK,EAAE;MACtB,KAAK,IAAIC,CAAC,IAAIJ,GAAG,EAAE;QACfE,IAAI,GAAGA,IAAI,CAACG,MAAM,CAAC,IAAI,CAACN,UAAU,CAACC,GAAG,CAACI,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC;MACpD;MACA,OAAOC,IAAI;IACf;IACA,IAAIF,GAAG,CAACC,GAAG,CAAC,EAAEC,IAAI,CAACI,IAAI,CAACN,GAAG,CAACC,GAAG,CAAC,CAAC;IAEjC,IAAK,OAAOD,GAAG,IAAI,QAAQ,IAAMA,GAAG,KAAK,IAAK,EAAE;MAC5C,IAAIO,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACT,GAAG,CAAC;MAC/B,IAAIO,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QACrB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,QAAQ,CAACG,MAAM,EAAEN,CAAC,EAAE,EAAE;UACtCF,IAAI,GAAGA,IAAI,CAACG,MAAM,CAAC,IAAI,CAACN,UAAU,CAACC,GAAG,CAACO,QAAQ,CAACH,CAAC,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC;QAC9D;MACJ;IACJ;IACA,OAAOC,IAAI;EACf;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIS,UAAU,OAAkB;IAAA,IAAjB;MAACX,GAAG;MAAEC,GAAG;MAAEW;IAAG,CAAC;IAC1B,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIT,CAAC,IAAIJ,GAAG,EAAE;MACf,IAAI,CAACA,GAAG,CAACc,cAAc,CAACV,CAAC,CAAC,EAAE;MAC5B,IAAI,OAAOJ,GAAG,CAACI,CAAC,CAAC,IAAI,QAAQ,EAAE;QAC3BS,OAAO,GAAGA,OAAO,CAACR,MAAM,CAAC,IAAI,CAACM,UAAU,CAACX,GAAG,CAACI,CAAC,CAAC,EAAEH,GAAG,EAAEW,GAAG,CAAC,CAAC;MAC/D,CAAC;QACG;QACA;QACA,IAAIR,CAAC,KAAKH,GAAG,IAAID,GAAG,CAACI,CAAC,CAAC,KAAKQ,GAAG,IAAIR,CAAC,KAAKH,GAAG,IAAIW,GAAG,KAAK,EAAE,EAAE;UAAE;UAC1DC,OAAO,CAACP,IAAI,CAACN,GAAG,CAAC;QACrB,CAAC,MAAM,IAAIA,GAAG,CAACI,CAAC,CAAC,KAAKQ,GAAG,IAAIX,GAAG,KAAK,EAAE,EAAE;UACrC;UACA,IAAIY,OAAO,CAACE,WAAW,CAACf,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;YACjCa,OAAO,CAACP,IAAI,CAACN,GAAG,CAAC;UACrB;QACJ;IACR;IACA,OAAOa,OAAO;EAClB;AACA;AAAC;AAED,eAAef,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}