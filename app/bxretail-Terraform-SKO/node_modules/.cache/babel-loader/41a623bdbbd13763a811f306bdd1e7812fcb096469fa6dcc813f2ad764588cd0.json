{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsanchez/projects/TechnicalEnablement/vscode-workspaces/BXRetail/BXRetail-Apps/bxretail/src/components/NavbarMain/NavbarMain.js\";\n// Packages\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, Container, Navbar, NavbarToggler, Nav, NavItem, NavLink, Input } from 'reactstrap';\nimport { Link, NavLink as RRNavLink, withRouter } from 'react-router-dom';\n\n// Components\nimport Session from '../Utils/Session';\nimport AuthZ from '../Controller/AuthZ';\nimport Tokens from '../Utils/Tokens';\n\n// Styles\nimport './NavbarMain.scss';\n\n// Data\nimport data from './data.json';\n// import { faRegistered } from '@fortawesome/free-regular-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NavbarMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      isLoggedOut: true\n    };\n    this.session = new Session();\n    this.envVars = window._env_;\n    this.authz = new AuthZ();\n    this.tokens = new Tokens();\n  }\n  triggerModalLoginPassword() {\n    if (this.session.getAuthenticatedUserItem('triggerLogin', 'session')) {\n      this.session.removeAuthenticatedUserItem('triggerLogin', 'session');\n    }\n    this.session.setAuthenticatedUserItem('authMode', 'login', 'session');\n    const redirectURI = this.envVars.REACT_APP_HOST + '/';\n    this.authz.initAuthNFlow({\n      grantType: 'authCode',\n      clientId: this.envVars.REACT_APP_CLIENT,\n      redirectURI: redirectURI,\n      scopes: this.envVars.REACT_APP_USER_SCOPES\n    });\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  logout() {\n    const signOffEndpoint = this.envVars.REACT_APP_P1HOST + '/' + this.envVars.REACT_APP_ENVID + '/as/signoff?id_token_hint=' + this.session.getAuthenticatedUserItem('IdT', 'session');\n    this.session.clearUserAppSession('session');\n    window.location.assign(signOffEndpoint);\n  }\n  componentDidMount() {\n    // For validation/troubleshooting only.\n    console.info('DOCKER IMAGE', this.envVars.REACT_APP_IMAGE_NAME);\n    const IdT = this.session.getAuthenticatedUserItem('IdT', 'session');\n    const isLoggedOut = IdT === null || IdT === 'undefined' ? true : false;\n    this.setState({\n      isLoggedOut: isLoggedOut\n    });\n    this.session.protectPage(isLoggedOut, window.location.pathname, this.session.getAuthenticatedUserItem('bxRetailUserType', 'session'), this.props);\n    if (isLoggedOut && this.session.getAuthenticatedUserItem('triggerLogin', 'session')) {\n      this.session.setAuthenticatedUserItem('targetReferrer', true, 'session');\n      this.triggerModalLoginPassword();\n    }\n    if (this.session.getAuthenticatedUserItem('email', 'session')) {\n      this.setState({\n        email: this.session.getAuthenticatedUserItem('email', 'session')\n      });\n    }\n    if (window.location.search) {\n      const redirectURI = this.envVars.REACT_APP_HOST + '/';\n      const queryParams = new URLSearchParams(window.location.search);\n      const authCode = queryParams.get('code');\n\n      // Need to exit this logic early when redirecting from BXFinance with a completed or failed\n      // open banking transaction so the UX continues accordingly at checkout.\n      if (this.props.location.pathname.includes('/shop/checkout')) {\n        console.info('Returning from BXFinance from purchase authorization.');\n        return;\n      }\n      if (queryParams.get('error') && queryParams.get('error') === 'access_denied') {\n        console.info('Returning from BXFinance from purchase authorization error.');\n        return;\n      }\n      const authNParam = authCode ? 'authCode' : 'WTF?';\n      const authMode = this.session.getAuthenticatedUserItem('authMode', 'session');\n      switch (authNParam) {\n        case 'authCode':\n          // Returned state should match what was passed in\n          if (queryParams.get('state') !== this.session.getAuthenticatedUserItem('state', 'session')) {\n            throw new Error('oAuth state parameters do not match.');\n          }\n          this.authz.swapCodeForToken({\n            code: authCode,\n            redirectURI: redirectURI,\n            authMode: this.session.getAuthenticatedUserItem('authMode', 'session'),\n            clientId: this.envVars.REACT_APP_CLIENT\n          }).then(response => {\n            // Clean up pkce and state storage\n            this.session.removeAuthenticatedUserItem('state', 'session');\n            this.session.removeAuthenticatedUserItem('code_verifier', 'session');\n            this.session.setAuthenticatedUserItem('AT', response.access_token, 'session');\n            this.session.setAuthenticatedUserItem('IdT', response.id_token, 'session');\n            const firstName = this.tokens.getTokenValue({\n              token: response.id_token,\n              key: 'given_name'\n            });\n            if (firstName) {\n              this.session.setAuthenticatedUserItem('firstName', firstName, 'session');\n            }\n            const email = this.tokens.getTokenValue({\n              token: response.id_token,\n              key: 'email'\n            });\n            const groups = this.tokens.getTokenValue({\n              token: response.id_token,\n              key: 'bxRetailUserType'\n            });\n            const userType = groups ? groups[0] : 'Customer';\n            this.session.setAuthenticatedUserItem('email', email, 'session');\n            this.session.setAuthenticatedUserItem('bxRetailUserType', userType, 'session');\n\n            //Set temp reg thank you message.\n            if (authMode === 'registration') {\n              this.session.setAuthenticatedUserItem('regMessage', data.menus.utility.register_done, 'session');\n            }\n            // It's a customer.\n            if (authMode === 'login' || authMode === 'registration') {\n              this.props.history.push('/dashboard/settings/profile');\n            } // No other authModes for the SKO version of BXR.\n          });\n\n          break;\n        default:\n          console.error('AuthN param exception.', 'Received an unknown value of ' + authMode);\n      }\n    }\n  }\n  render() {\n    var _this$props$location$, _this$props$location$2;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"navbar-main\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"md\",\n        className: \"navbar-desktop\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"navbar-brand\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: window._env_.PUBLIC_URL + '/images/logo-white.svg',\n              alt: data.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n            onClick: this.toggle.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: this.state.isOpen,\n            navbar: true,\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              className: \"justify-content-end ml-auto navbar-nav-utility\",\n              navbar: true,\n              children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                className: \"customer-collection\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: (_this$props$location$ = this.props.location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.action\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    className: \"prospect\",\n                    autoComplete: \"off\",\n                    type: \"text\",\n                    name: \"prospect\",\n                    id: \"prospect\",\n                    placeholder: data.menus.utility.gaCustomer,\n                    value: this.state.prospect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: window._env_.PUBLIC_URL + '/images/icons/map-marker.svg',\n                    alt: data.menus.utility.locations\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: window._env_.PUBLIC_URL + '/images/icons/cart.svg',\n                    alt: data.menus.utility.cart\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), this.state.isLoggedOut && /*#__PURE__*/_jsxDEV(NavItem, {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  \"data-selenium\": \"nav_signin\",\n                  href: \"#\",\n                  onClick: this.triggerModalLoginPassword.bind(this),\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: window._env_.PUBLIC_URL + '/images/icons/user.svg',\n                    alt: data.menus.utility.login,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 45\n                  }, this), ' ', data.menus.utility.login]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), !this.state.isLoggedOut && /*#__PURE__*/_jsxDEV(NavItem, {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  href: \"#\",\n                  onClick: this.logout.bind(this),\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: window._env_.PUBLIC_URL + '/images/icons/user.svg',\n                    alt: data.menus.utility.logout,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 45\n                  }, this), ' ', data.menus.utility.logout]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"md\",\n        className: \"navbar-desktop\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto navbar-nav-main\",\n            navbar: true,\n            children: this.props && this.props.data && this.props.data.menus && this.props.data.menus.primary ? this.props.data.menus.primary.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: item.url,\n                  activeClassName: \"active\",\n                  exact: true,\n                  tag: RRNavLink,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 47\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 43\n              }, this);\n            }) : data.menus.primary.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: item.url,\n                  activeClassName: \"active\",\n                  tag: RRNavLink,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 47\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 43\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        color: \"dark\",\n        dark: true,\n        expand: \"md\",\n        className: \"navbar-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobilenav-menu\",\n          children: /*#__PURE__*/_jsxDEV(NavbarToggler, {\n            onClick: this.toggle.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobilenav-brand\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"navbar-brand\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: window._env_.PUBLIC_URL + '/images/logo-white.svg',\n              alt: data.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobilenav-login\",\n          children: this.state.isLoggedOut ? /*#__PURE__*/_jsxDEV(NavLink, {\n            href: \"#\",\n            className: \"login\",\n            onClick: this.triggerModalLoginPassword.bind(this),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n            href: \"#\",\n            className: \"logout\",\n            onClick: this.logout.bind(this),\n            children: [' ', data.menus.utility.logout]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"navbar-nav-main navbar-light bg-light\",\n            navbar: true,\n            children: this.props && this.props.data && this.props.data.menus && this.props.data.menus.primary ? this.props.data.menus.primary.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: item.url,\n                  activeClassName: \"active\",\n                  exact: true,\n                  tag: RRNavLink,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 47\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 43\n              }, this);\n            }) : data.menus.primary.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(NavItem, {\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: item.url,\n                  activeClassName: \"active\",\n                  exact: true,\n                  tag: RRNavLink,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 47\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 43\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"navbar-nav-utility\",\n            navbar: true,\n            children: [/*#__PURE__*/_jsxDEV(NavItem, {\n              className: \"customer-collection\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_this$props$location$2 = this.props.location.state) === null || _this$props$location$2 === void 0 ? void 0 : _this$props$location$2.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  className: \"prospect\",\n                  autoComplete: \"off\",\n                  type: \"text\",\n                  name: \"prospect\",\n                  id: \"prospect\",\n                  placeholder: data.menus.utility.gaCustomer,\n                  value: this.state.prospect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: window._env_.PUBLIC_URL + '/images/icons/map-marker.svg',\n                  alt: data.menus.utility.locations,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this), ' ', data.menus.utility.locations]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: window._env_.PUBLIC_URL + '/images/icons/cart.svg',\n                  alt: data.menus.utility.cart,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 37\n                }, this), ' ', data.menus.utility.support]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), this.state.isLoggedOut && /*#__PURE__*/_jsxDEV(NavItem, {\n              className: \"login\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                href: \"#\",\n                onClick: this.triggerModalLoginPassword.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: window._env_.PUBLIC_URL + '/images/icons/user.svg',\n                  alt: data.menus.utility.login,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 41\n                }, this), ' ', data.menus.utility.login]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this), !this.state.isLoggedOut && /*#__PURE__*/_jsxDEV(NavItem, {\n              className: \"logout d-none\",\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                href: \"#\",\n                onClick: this.logout.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: window._env_.PUBLIC_URL + '/images/icons/user.svg',\n                  alt: data.menus.utility.logout,\n                  className: \"mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 41\n                }, this), ' ', data.menus.utility.logout]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n}\nNavbarMain.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default _c = withRouter(NavbarMain);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Collapse","Container","Navbar","NavbarToggler","Nav","NavItem","NavLink","Input","Link","RRNavLink","withRouter","Session","AuthZ","Tokens","data","NavbarMain","Component","constructor","props","state","isOpen","isLoggedOut","session","envVars","window","_env_","authz","tokens","triggerModalLoginPassword","getAuthenticatedUserItem","removeAuthenticatedUserItem","setAuthenticatedUserItem","redirectURI","REACT_APP_HOST","initAuthNFlow","grantType","clientId","REACT_APP_CLIENT","scopes","REACT_APP_USER_SCOPES","toggle","setState","logout","signOffEndpoint","REACT_APP_P1HOST","REACT_APP_ENVID","clearUserAppSession","location","assign","componentDidMount","console","info","REACT_APP_IMAGE_NAME","IdT","protectPage","pathname","email","search","queryParams","URLSearchParams","authCode","get","includes","authNParam","authMode","Error","swapCodeForToken","code","then","response","access_token","id_token","firstName","getTokenValue","token","key","groups","userType","menus","utility","register_done","history","push","error","render","PUBLIC_URL","brand","bind","action","gaCustomer","prospect","locations","cursor","cart","login","primary","map","item","i","url","title","support","propTypes","shape","string","func","isRequired"],"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/vscode-workspaces/BXRetail/BXRetail-Apps/bxretail/src/components/NavbarMain/NavbarMain.js"],"sourcesContent":["// Packages\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Collapse, Container, Navbar, NavbarToggler, Nav, NavItem, NavLink, Input } from 'reactstrap';\nimport { Link, NavLink as RRNavLink, withRouter } from 'react-router-dom';\n\n// Components\nimport Session from '../Utils/Session';\nimport AuthZ from '../Controller/AuthZ';\nimport Tokens from '../Utils/Tokens';\n\n// Styles\nimport './NavbarMain.scss';\n\n// Data\nimport data from './data.json';\n// import { faRegistered } from '@fortawesome/free-regular-svg-icons';\n\nclass NavbarMain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            isLoggedOut: true,\n        };\n\n        this.session = new Session();\n        this.envVars = window._env_;\n        this.authz = new AuthZ();\n        this.tokens = new Tokens();\n    }\n    \n    triggerModalLoginPassword() {\n        if (this.session.getAuthenticatedUserItem('triggerLogin', 'session')) {\n            this.session.removeAuthenticatedUserItem('triggerLogin', 'session');\n        }\n        this.session.setAuthenticatedUserItem('authMode', 'login', 'session');\n        const redirectURI = this.envVars.REACT_APP_HOST + '/';\n        this.authz.initAuthNFlow({\n            grantType: 'authCode',\n            clientId: this.envVars.REACT_APP_CLIENT,\n            redirectURI: redirectURI,\n            scopes: this.envVars.REACT_APP_USER_SCOPES,\n        });\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    }\n\n    logout() {\n        const signOffEndpoint = this.envVars.REACT_APP_P1HOST + '/' + this.envVars.REACT_APP_ENVID + '/as/signoff?id_token_hint=' + this.session.getAuthenticatedUserItem('IdT', 'session'); \n        this.session.clearUserAppSession('session');\n        window.location.assign(signOffEndpoint);\n    }\n\n    componentDidMount() {\n        // For validation/troubleshooting only.\n        console.info('DOCKER IMAGE', this.envVars.REACT_APP_IMAGE_NAME);\n        \n        const IdT = this.session.getAuthenticatedUserItem('IdT', 'session');\n        const isLoggedOut = IdT === null || IdT === 'undefined' ? true : false;\n        this.setState({ isLoggedOut: isLoggedOut });\n        this.session.protectPage(\n            isLoggedOut,\n            window.location.pathname,\n            this.session.getAuthenticatedUserItem('bxRetailUserType', 'session'),\n            this.props\n        );\n\n        if (isLoggedOut && this.session.getAuthenticatedUserItem('triggerLogin', 'session')) {\n            this.session.setAuthenticatedUserItem('targetReferrer', true, 'session');\n            this.triggerModalLoginPassword();\n        }\n\n        if (this.session.getAuthenticatedUserItem('email', 'session')) {\n            this.setState({ email: this.session.getAuthenticatedUserItem('email', 'session') });\n        }\n\n        if (window.location.search) {\n            const redirectURI = this.envVars.REACT_APP_HOST + '/';\n            const queryParams = new URLSearchParams(window.location.search);\n            const authCode = queryParams.get('code');\n\n            // Need to exit this logic early when redirecting from BXFinance with a completed or failed\n            // open banking transaction so the UX continues accordingly at checkout.\n            if (this.props.location.pathname.includes('/shop/checkout')) {\n                console.info('Returning from BXFinance from purchase authorization.');\n                return;\n            }\n\n            if (queryParams.get('error') && queryParams.get('error') === 'access_denied') {\n                console.info('Returning from BXFinance from purchase authorization error.');\n                return;\n            }\n\n            const authNParam = authCode ? 'authCode' : 'WTF?';\n            const authMode = this.session.getAuthenticatedUserItem('authMode', 'session');\n            switch (authNParam) {\n                case 'authCode':\n                    // Returned state should match what was passed in\n                    if (queryParams.get('state') !== this.session.getAuthenticatedUserItem('state', 'session')) {\n                        throw new Error('oAuth state parameters do not match.');\n                    }\n\n                    this.authz\n                        .swapCodeForToken({\n                            code: authCode,\n                            redirectURI: redirectURI,\n                            authMode: this.session.getAuthenticatedUserItem('authMode', 'session'),\n                            clientId: this.envVars.REACT_APP_CLIENT,\n                        })\n                        .then((response) => {\n                            // Clean up pkce and state storage\n                            this.session.removeAuthenticatedUserItem('state', 'session');\n                            this.session.removeAuthenticatedUserItem('code_verifier', 'session');\n\n                            this.session.setAuthenticatedUserItem('AT', response.access_token, 'session');\n                            this.session.setAuthenticatedUserItem('IdT', response.id_token, 'session');\n                            const firstName = this.tokens.getTokenValue({\n                                token: response.id_token,\n                                key: 'given_name',\n                            });\n                            if (firstName) {\n                                this.session.setAuthenticatedUserItem('firstName', firstName, 'session');\n                            }\n                            const email = this.tokens.getTokenValue({ token: response.id_token, key: 'email' });\n                            const groups = this.tokens.getTokenValue({\n                                token: response.id_token,\n                                key: 'bxRetailUserType',\n                            });\n                            const userType = groups ? groups[0] : 'Customer';\n                            this.session.setAuthenticatedUserItem('email', email, 'session');\n                            this.session.setAuthenticatedUserItem('bxRetailUserType', userType, 'session');\n\n                            //Set temp reg thank you message.\n                            if (authMode === 'registration') {\n                                this.session.setAuthenticatedUserItem(\n                                    'regMessage',\n                                    data.menus.utility.register_done,\n                                    'session'\n                                );\n                            }\n                            // It's a customer.\n                            if (authMode === 'login' || authMode === 'registration') {\n                                this.props.history.push('/dashboard/settings/profile');\n                            } // No other authModes for the SKO version of BXR.\n                        });\n                    break;\n                default:\n                    console.error('AuthN param exception.', 'Received an unknown value of ' + authMode);\n            }\n        }\n    }\n    render() {\n        return (\n            <section className='navbar-main'>\n                {/* DESKTOP NAV */}\n                <Navbar color='dark' dark expand='md' className='navbar-desktop'>\n                    <Container>\n                        <Link to='/' className='navbar-brand'>\n                            <img src={window._env_.PUBLIC_URL + '/images/logo-white.svg'} alt={data.brand} />\n                        </Link>\n                        <NavbarToggler onClick={this.toggle.bind(this)} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className='justify-content-end ml-auto navbar-nav-utility' navbar>\n                                <NavItem className='customer-collection'>\n                                    <span>{this.props.location.state?.action}</span>\n                                    <form>\n                                        <Input\n                                            className='prospect'\n                                            autoComplete='off'\n                                            type='text'\n                                            name='prospect'\n                                            id='prospect'\n                                            placeholder={data.menus.utility.gaCustomer}\n                                            value={this.state.prospect}\n                                        />\n                                    </form>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink>\n                                        <img\n                                            src={window._env_.PUBLIC_URL + '/images/icons/map-marker.svg'}\n                                            alt={data.menus.utility.locations}\n                                        />\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        style={{ cursor: 'pointer' }}>\n                                        <img\n                                            src={window._env_.PUBLIC_URL + '/images/icons/cart.svg'}\n                                            alt={data.menus.utility.cart}\n                                        />\n                                    </NavLink>\n                                </NavItem>\n                                {this.state.isLoggedOut && (\n                                    <NavItem className=''>\n                                        <NavLink\n                                            data-selenium='nav_signin'\n                                            href='#'\n                                            onClick={this.triggerModalLoginPassword.bind(this)}>\n                                            <img\n                                                src={window._env_.PUBLIC_URL + '/images/icons/user.svg'}\n                                                alt={data.menus.utility.login}\n                                                className='mr-1'\n                                            />{' '}\n                                            {data.menus.utility.login}\n                                        </NavLink>\n                                    </NavItem>\n                                )}\n                                {!this.state.isLoggedOut && (\n                                    <NavItem className=''>\n                                        <NavLink href='#' onClick={this.logout.bind(this)}>\n                                            <img\n                                                src={window._env_.PUBLIC_URL + '/images/icons/user.svg'}\n                                                alt={data.menus.utility.logout}\n                                                className='mr-1'\n                                            />{' '}\n                                            {data.menus.utility.logout}\n                                        </NavLink>\n                                    </NavItem>\n                                )}\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <Navbar color='dark' dark expand='md' className='navbar-desktop'>\n                    <Container>\n                        <Nav className='mr-auto navbar-nav-main' navbar>\n                            {this.props && this.props.data && this.props.data.menus && this.props.data.menus.primary\n                                ? this.props.data.menus.primary.map((item, i) => {\n                                      return (\n                                          <NavItem key={i}>\n                                              <NavLink to={item.url} activeClassName='active' exact tag={RRNavLink}>\n                                                  {item.title}\n                                              </NavLink>\n                                          </NavItem>\n                                      );\n                                  })\n                                : data.menus.primary.map((item, i) => {\n                                      return (\n                                          <NavItem key={i}>\n                                              <NavLink to={item.url} activeClassName='active' tag={RRNavLink}>\n                                                  {item.title}\n                                              </NavLink>\n                                          </NavItem>\n                                      );\n                                  })}\n                        </Nav>\n                    </Container>\n                </Navbar>\n                {/* MOBILE NAV */}\n                <Navbar color='dark' dark expand='md' className='navbar-mobile'>\n                    <div className='mobilenav-menu'>\n                        <NavbarToggler onClick={this.toggle.bind(this)} />\n                    </div>\n                    <div className='mobilenav-brand'>\n                        <Link to='/' className='navbar-brand'>\n                            <img src={window._env_.PUBLIC_URL + '/images/logo-white.svg'} alt={data.brand} />\n                        </Link>\n                    </div>\n\n                    <div className='mobilenav-login'>\n                        {this.state.isLoggedOut ? (\n                            <NavLink href='#' className='login' onClick={this.triggerModalLoginPassword.bind(this)}>\n                                Sign In\n                            </NavLink>\n                        ) : (\n                            <NavLink href='#' className='logout' onClick={this.logout.bind(this)}>\n                                {' '}\n                                {data.menus.utility.logout}\n                            </NavLink>\n                        )}\n                    </div>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className='navbar-nav-main navbar-light bg-light' navbar>\n                            {this.props && this.props.data && this.props.data.menus && this.props.data.menus.primary\n                                ? this.props.data.menus.primary.map((item, i) => {\n                                      return (\n                                          <NavItem key={i}>\n                                              <NavLink to={item.url} activeClassName='active' exact tag={RRNavLink}>\n                                                  {item.title}\n                                              </NavLink>\n                                          </NavItem>\n                                      );\n                                  })\n                                : data.menus.primary.map((item, i) => {\n                                      return (\n                                          <NavItem key={i}>\n                                              <NavLink to={item.url} activeClassName='active' exact tag={RRNavLink}>\n                                                  {item.title}\n                                              </NavLink>\n                                          </NavItem>\n                                      );\n                                  })}\n                        </Nav>\n                        <Nav className='navbar-nav-utility' navbar>\n                            <NavItem className='customer-collection'>\n                                <span>{this.props.location.state?.action}</span>\n                                <form>\n                                    <Input\n                                        className='prospect'\n                                        autoComplete='off'\n                                        type='text'\n                                        name='prospect'\n                                        id='prospect'\n                                        placeholder={data.menus.utility.gaCustomer}\n                                        value={this.state.prospect}\n                                    />\n                                </form>\n                            </NavItem>\n                            <br />\n                            <NavItem>\n                                <NavLink>\n                                    <img\n                                        src={window._env_.PUBLIC_URL + '/images/icons/map-marker.svg'}\n                                        alt={data.menus.utility.locations}\n                                        className='mr-1'\n                                    />{' '}\n                                    {data.menus.utility.locations}\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink>\n                                    <img\n                                        src={window._env_.PUBLIC_URL + '/images/icons/cart.svg'}\n                                        alt={data.menus.utility.cart}\n                                        className='mr-1'\n                                    />{' '}\n                                    {data.menus.utility.support}\n                                </NavLink>\n                            </NavItem>\n                            {this.state.isLoggedOut && (\n                                <NavItem className='login'>\n                                    <NavLink href='#' onClick={this.triggerModalLoginPassword.bind(this)}>\n                                        <img\n                                            src={window._env_.PUBLIC_URL + '/images/icons/user.svg'}\n                                            alt={data.menus.utility.login}\n                                            className='mr-1'\n                                        />{' '}\n                                        {data.menus.utility.login}\n                                    </NavLink>\n                                </NavItem>\n                            )}\n                            {!this.state.isLoggedOut && (\n                                <NavItem className='logout d-none'>\n                                    <NavLink href='#' onClick={this.logout.bind(this)}>\n                                        <img\n                                            src={window._env_.PUBLIC_URL + '/images/icons/user.svg'}\n                                            alt={data.menus.utility.logout}\n                                            className='mr-1'\n                                        />{' '}\n                                        {data.menus.utility.logout}\n                                    </NavLink>\n                                </NavItem>\n                            )}\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </section>\n        );\n    }\n}\n\nNavbarMain.propTypes = {\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n    }),\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default withRouter(NavbarMain);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}